/**
 * JavaScript简史
 *  DOM(documnet object model)一套对文档的内容进行抽象和概念化的方法
 * JavaScript语法
 *  最好的做法是把<script>标签放到HTML文档的最后 </body>标签之前 这样能使浏览器更快地加载页面/程序设计语言分为解释型和编译型两大类 编译器是一种程序
 *  能够把高级语言编出来地源代码编译为直接在计算机上执行的文件/解释型成熟设计语言不需要编译器 它们仅需要解释器 对于JavaScript语言 在互联网环境下 web浏览器
 *  负责完成相关的解释和执行工作 浏览器中的JavaScript解释器将直接读入源代码并执行 与解释型语言相比 编译型语言往往速度更快 可移植性更好 但它们的学习曲线也往往
 *  相当陡峭/语言结构方面的各项规则 我们称之为语法/语句(statement) 脚本的基本单位/如果你想把多条语句放在同一行上 就必须用分号来分隔它们/我们建议在每条语句的末尾
 *  加上一个分号 这是一种良好的编程习惯
 *  注释：不是所有的语句都是需要JavaScript解释器去解释并执行 有时你需要在脚本中写一些仅供自己参考或提醒自己的信息 你希望JavaScript解释器能直接忽略掉这些信息
 *    '//'：单行注释符号
 *    '/* *\/': 多行注释
 *    HTML的注释：<!-- -->
 *  变量：会发生变化的东西/把值存入变量的操作称为赋值/变量声明(declare)/变量的驼峰命名法 和 短横线命名法
 *  数据类型：在声明变量的同时还必须同时声明变量的数据类型 这种做法称为类型声明 必须明确类型声明的语言称为强类型语言 JavaScript是一种弱类型语言 这意味着可以在任何阶段
 *  改变变量的数据类型
 *  字符转义(escaping)：有些字符在某些情况下 需要被看做为一个普通字符 就需要对这个字符进行转义 使用反斜线\来进行转义
 *  字符串/数值/布尔值
*/